import * as EndUserAuth from "../generated/coinbase/enduserauth/v1/index.js";
import { HttpRequestHandler } from "./http.js";
import { createEndUserAuthServiceClient } from "../generated/coinbase/enduserauth/v1/index.js";
export class WaasEndUserAuth {
    #fullyQualifiedPath;
    #verbose;
    #client;
    constructor(options) {
        this.#fullyQualifiedPath = `${options.hostname}consumer/auth`;
        this.#verbose = options.verbose;
        this.#client = EndUserAuth.createEndUserAuthServiceClient(new HttpRequestHandler(this.#fullyQualifiedPath, options.authToken, this.#verbose)
            .requestHandler);
    }
    async refreshToken(refreshToken) {
        if (!refreshToken) {
            throw new Error("refreshToken is required");
        }
        const request = { refreshToken };
        return await this.#client.RefreshToken(request);
    }
    async logOut(authToken) {
        if (!authToken) {
            throw new Error("refreshToken is required");
        }
        const request = { authToken };
        return await this.#client.LogOut(request);
    }
}
export function unauthorizedEuaClient() {
    return createEndUserAuthServiceClient(new HttpRequestHandler("/waas/consumer/auth", "", false).requestHandler);
}
