export const hexToBuffer = hex => {
    let bytes = new Uint8Array(hex.length / 2);
    for (let i = 0, j = 0; i < hex.length; i += 2, j++) {
        bytes[j] = parseInt(hex.substr(i, 2), 16);
    }
    return bytes;
};
export const utf8ToBuffer = text => {
    return new TextEncoder().encode(text);
};
export const base64ToBuffer = contents => {
    let binaryString = atob(contents);
    let bytes = new Uint8Array(binaryString.length);
    for (let i = 0; i < binaryString.length; i++) {
        bytes[i] = binaryString.charCodeAt(i);
    }
    return bytes;
};
export const bufferToHex = (buffer) => {
    return [...new Uint8Array(buffer)].map(x => x.toString(16).padStart(2, "0")).join("");
};
