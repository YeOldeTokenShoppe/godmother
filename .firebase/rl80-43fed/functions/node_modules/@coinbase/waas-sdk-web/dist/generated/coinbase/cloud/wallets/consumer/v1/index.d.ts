export type Wallet = {
    name: string | undefined;
    keyContainerRootId: string | undefined;
    reinitializationMetadata: ReinitializationMetadata | undefined;
};
export type ReinitializationMetadata = {
    encryptedActivationStringHex: string | undefined;
    ivHex: string | undefined;
    sessionKeyHex: string | undefined;
    kekPublicKeyHash: string | undefined;
};
export type Address = {
    name: string | undefined;
    address: string | undefined;
    wallet: string | undefined;
    protocolFamily: string | undefined;
    bip32FullDerivationPath: string | undefined;
    keyContainerRootId: string | undefined;
    keyContainerObjectId: string | undefined;
};
export type GenerateAddressRequest = {
    protocolFamily: string | undefined;
    keyContainerRootId: string | undefined;
    bip32XpubKey: string | undefined;
    bip32AccountPubKey: string | undefined;
    bip32XpubKeyAttestation: string | undefined;
    bip32FullDerivationPath: string | undefined;
    keyContainerObjectId: string | undefined;
    reinitializationMetadata: ReinitializationMetadata | undefined;
};
export type GenerateAddressResponse = {
    address: string | undefined;
    walletId: string | undefined;
    bip32FullDerivationPath: string | undefined;
};
export type ListAddressesRequest = {
    parent: string | undefined;
    protocolFamily: string | undefined;
    pageSize: number | undefined;
    pageToken: string | undefined;
};
export type ListAddressesResponse = {
    addresses: Address[] | undefined;
    nextPageToken: string | undefined;
    totalSize: number | undefined;
};
export type GetWalletRequest = {
    includeAddresses: boolean | undefined;
};
export type GetWalletResponse = {
    wallet: Wallet | undefined;
    addresses: Address[] | undefined;
    nextPageToken: string | undefined;
};
export type UpdateWalletReinitMetadataRequest = {
    name: string | undefined;
    reinitializationMetadata: ReinitializationMetadata | undefined;
};
export interface ConsumerWalletService {
    GenerateAddress(request: GenerateAddressRequest): Promise<Address>;
    ListAddresses(request: ListAddressesRequest): Promise<ListAddressesResponse>;
    GetWallet(request: GetWalletRequest): Promise<GetWalletResponse>;
    UpdateWalletReinitMetadata(request: UpdateWalletReinitMetadataRequest): Promise<Wallet>;
}
type RequestType = {
    path: string;
    method: string;
    body: string | null;
};
type RequestHandler = (request: RequestType, meta: {
    service: string;
    method: string;
}) => Promise<unknown>;
export declare function createConsumerWalletServiceClient(handler: RequestHandler): ConsumerWalletService;
export {};
