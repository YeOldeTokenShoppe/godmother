const glob = () => (typeof window !== "undefined" ? window : global);
export const state = () => {
    const st = glob().tsifrpcState;
    if (!st) {
        glob().tsifrpcState = {
            version: process.env.TSIFRPC_CLASS_VERSION,
            frame: null,
            targetOrigin: "",
            listener: null,
            nonce: 0,
            dispatch: {
                globalDispatch: {},
                staticDispatch: {},
                classDispatch: {},
                minifiedClazzNames: {},
            },
        };
    }
    return glob().tsifrpcState;
};
export var __initPromise = null;
export async function assureLoaded() {
    if (__initPromise) {
        await __initPromise;
    }
}
export function setLoading(promise) {
    __initPromise = promise;
}
export const getNonce = () => {
    return state().nonce++;
};
