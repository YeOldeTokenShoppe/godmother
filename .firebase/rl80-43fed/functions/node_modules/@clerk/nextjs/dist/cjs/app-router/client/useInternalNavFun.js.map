{"version":3,"sources":["../../../../src/app-router/client/useInternalNavFun.ts"],"sourcesContent":["import type { AppRouterInstance } from 'next/dist/shared/lib/app-router-context.shared-runtime';\nimport { usePathname } from 'next/navigation';\nimport { useCallback, useEffect, useTransition } from 'react';\n\nimport type { NextClerkProviderProps } from '../../types';\n\ndeclare global {\n  interface Window {\n    __clerk_internal_navFun: NonNullable<\n      NextClerkProviderProps['routerPush'] | NextClerkProviderProps['routerReplace']\n    >;\n    __clerk_internal_navPromisesBuffer: Array<() => void> | undefined;\n  }\n}\n\nexport const useInternalNavFun = (props: {\n  windowNav: typeof window.history.pushState | typeof window.history.replaceState | undefined;\n  routerNav: AppRouterInstance['push'] | AppRouterInstance['replace'];\n}) => {\n  const { windowNav, routerNav } = props;\n  const pathname = usePathname();\n  const [isPending, startTransition] = useTransition();\n\n  if (windowNav) {\n    window.__clerk_internal_navFun = (to, opts) => {\n      return new Promise<void>(res => {\n        if (!window.__clerk_internal_navPromisesBuffer) {\n          // We need to use window to store the reference to the buffer,\n          // as ClerkProvider might be unmounted and remounted during navigations\n          // If we use a ref, it will be reset when ClerkProvider is unmounted\n          window.__clerk_internal_navPromisesBuffer = [];\n        }\n        window.__clerk_internal_navPromisesBuffer.push(res);\n        startTransition(() => {\n          // If the navigation is internal, we should use the history API to navigate\n          // as this is the way to perform a shallow navigation in Next.js App Router\n          // without unmounting/remounting the page or fetching data from the server.\n          if (opts?.__internal_metadata?.navigationType === 'internal') {\n            // In 14.1.0, useSearchParams becomes reactive to shallow updates,\n            // but only if passing `null` as the history state.\n            // Older versions need to maintain the history state for push/replace to work,\n            // without affecting how the Next router works.\n            const state = ((window as any).next?.version ?? '') < '14.1.0' ? history.state : null;\n            windowNav(state, '', to);\n          } else {\n            // If the navigation is external (usually when navigating away from the component but still within the app),\n            // we should use the Next.js router to navigate as it will handle updating the URL and also\n            // fetching the new page if necessary.\n            routerNav(to);\n          }\n        });\n      });\n    };\n  }\n\n  const flushPromises = () => {\n    window.__clerk_internal_navPromisesBuffer?.forEach(resolve => resolve());\n    window.__clerk_internal_navPromisesBuffer = [];\n  };\n\n  // Flush any pending promises on mount/unmount\n  useEffect(() => {\n    flushPromises();\n    return flushPromises;\n  }, []);\n\n  // Handle flushing the promise buffer when a navigation happens\n  useEffect(() => {\n    if (!isPending) {\n      flushPromises();\n    }\n  }, [pathname, isPending]);\n\n  return useCallback((to: string) => {\n    return window.__clerk_internal_navFun(to);\n  }, []);\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,wBAA4B;AAC5B,mBAAsD;AAa/C,MAAM,oBAAoB,CAAC,UAG5B;AACJ,QAAM,EAAE,WAAW,UAAU,IAAI;AACjC,QAAM,eAAW,+BAAY;AAC7B,QAAM,CAAC,WAAW,eAAe,QAAI,4BAAc;AAEnD,MAAI,WAAW;AACb,WAAO,0BAA0B,CAAC,IAAI,SAAS;AAC7C,aAAO,IAAI,QAAc,SAAO;AAC9B,YAAI,CAAC,OAAO,oCAAoC;AAI9C,iBAAO,qCAAqC,CAAC;AAAA,QAC/C;AACA,eAAO,mCAAmC,KAAK,GAAG;AAClD,wBAAgB,MAAM;AAjC9B;AAqCU,gBAAI,kCAAM,wBAAN,mBAA2B,oBAAmB,YAAY;AAK5D,kBAAM,UAAU,kBAAe,SAAf,mBAAqB,YAArB,YAAgC,MAAM,WAAW,QAAQ,QAAQ;AACjF,sBAAU,OAAO,IAAI,EAAE;AAAA,UACzB,OAAO;AAIL,sBAAU,EAAE;AAAA,UACd;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,EACF;AAEA,QAAM,gBAAgB,MAAM;AAvD9B;AAwDI,iBAAO,uCAAP,mBAA2C,QAAQ,aAAW,QAAQ;AACtE,WAAO,qCAAqC,CAAC;AAAA,EAC/C;AAGA,8BAAU,MAAM;AACd,kBAAc;AACd,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AAGL,8BAAU,MAAM;AACd,QAAI,CAAC,WAAW;AACd,oBAAc;AAAA,IAChB;AAAA,EACF,GAAG,CAAC,UAAU,SAAS,CAAC;AAExB,aAAO,0BAAY,CAAC,OAAe;AACjC,WAAO,OAAO,wBAAwB,EAAE;AAAA,EAC1C,GAAG,CAAC,CAAC;AACP;","names":[]}