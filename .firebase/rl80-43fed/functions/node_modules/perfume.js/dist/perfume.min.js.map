{"version":3,"file":"perfume.min.js","sources":["../src/config.ts","../src/types.ts","../src/constants.ts","../src/isSupported.ts","../src/getNetworkInformation.ts","../src/metrics.ts","../src/observeInstances.ts","../src/onVisibilityChange.ts","../src/performanceObserver.ts","../src/isLowEnd.ts","../src/utils.ts","../src/reportPerf.ts","../src/getNavigatorInfo.ts","../src/totalBlockingTime.ts","../src/vitalsScore.ts","../node_modules/web-vitals/dist/web-vitals.attribution.js","../src/log.ts","../src/element-timing.ts","../src/resourceTiming.ts","../src/observe.ts","../src/storageEstimate.ts","../src/steps/steps.ts","../src/steps/measureStep.ts","../src/steps/navigationSteps.ts","../src/steps/measureSteps.ts","../src/steps/markStep.ts","../src/measure.ts","../src/markNTBT.ts","../src/initPerfume.ts","../src/getNavigationTiming.ts","../src/steps/setStepsMap.ts","../src/steps/markStepOnce.ts"],"sourcesContent":["import { IPerfumeConfig } from './types';\n\nexport const config: IPerfumeConfig = {\n  // Metrics\n  isResourceTiming: false,\n  isElementTiming: false,\n  // Logging\n  maxTime: 30000,\n  // web-vitals report options\n  reportOptions: {},\n};\n","import type { ReportOpts } from 'web-vitals';\n\nexport interface Metric {\n  /**\n   * The name of the metric (in acronym form).\n   */\n  name:\n    | 'CLS'\n    | 'FCP'\n    | 'FID'\n    | 'INP'\n    | 'LCP'\n    | 'TTFB'\n    | 'RT'\n    | 'TBT'\n    | 'NTBT'\n    | 'ET'\n    | 'INP';\n  /**\n   * The current value of the metric.\n   */\n  value: number;\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  rating: IVitalsScore;\n  /**\n   * The delta between the current value and the last-reported value.\n   * On the first report, `delta` and `value` will always be the same.\n   */\n  delta?: number;\n  /**\n   * A unique ID representing this particular metric instance. This ID can\n   * be used by an analytics tool to dedupe multiple values sent for the same\n   * metric instance, or to group multiple deltas together and calculate a\n   * total. It can also be used to differentiate multiple different metric\n   * instances sent from the same page, which can happen if the page is\n   * restored from the back/forward cache (in that case new metrics object\n   * get created).\n   */\n  id?: string;\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  entries?: PerformanceEntry[];\n  /**\n   * The type of navigation\n   *\n   * Navigation Timing API (or `undefined` if the browser doesn't\n   * support that API). For pages that are restored from the bfcache, this\n   * value will be 'back-forward-cache'.\n   */\n  navigationType?: INavigationType;\n\n  /**\n   * An object containing potentially-helpful debugging information that\n   * can be sent along with the metric value for the current page visit in\n   * order to help identify issues happening to real-users in the field.\n   */\n  attribution: {\n    [key: string]: unknown;\n  };\n}\n\nexport interface IAnalyticsTrackerOptions {\n  attribution: object;\n  data: IPerfumeData;\n  metricName: string;\n  navigatorInformation: INavigatorInfo;\n  rating: IVitalsScore;\n  navigationType?: INavigationType;\n}\n\ninterface WebVitalsReportOptions {\n  ttfb?: ReportOpts;\n  cls?: ReportOpts;\n  fcp?: ReportOpts;\n  fid?: ReportOpts;\n  lcp?: ReportOpts;\n  inp?: ReportOpts;\n}\n\nexport interface IPerfumeConfig {\n  // Metrics\n  isResourceTiming: boolean;\n  isElementTiming: boolean;\n  // Analytics\n  analyticsTracker?: (options: IAnalyticsTrackerOptions) => void;\n  // Logging\n  maxTime: number;\n  // web-vitals report options\n  reportOptions: WebVitalsReportOptions;\n  // Steps definitions\n  steps?: IStepsConfig;\n  // Callback that will run each time a mark is called\n  onMarkStep?: (mark: string, steps: string[]) => void;\n}\n\nexport interface IPerfumeOptions {\n  // Metrics\n  resourceTiming?: boolean;\n  elementTiming?: boolean;\n  // Analytics\n  analyticsTracker?: (options: IAnalyticsTrackerOptions) => void;\n  // Logging\n  maxMeasureTime?: number;\n  // web-vitals report options\n  reportOptions?: WebVitalsReportOptions;\n  // Steps definitions\n  steps?: IStepsConfig;\n  // Callback that will run each time a mark is called\n  onMarkStep?: (mark: string, steps: string[]) => void;\n}\n\nexport interface IMetricMap {\n  [measureName: string]: boolean;\n}\n\nexport interface INavigatorInfo {\n  deviceMemory?: number;\n  hardwareConcurrency?: number;\n  isLowEndDevice?: boolean;\n  isLowEndExperience?: boolean;\n  serviceWorkerStatus?: 'controlled' | 'supported' | 'unsupported';\n}\n\nexport interface IPerfObservers {\n  [measureName: string]: any;\n}\n\nexport type IPerformanceObserverType =\n  | 'first-input'\n  | 'largest-contentful-paint'\n  | 'layout-shift'\n  | 'longtask'\n  | 'measure'\n  | 'navigation'\n  | 'paint'\n  | 'element'\n  | 'resource';\n\nexport type IPerformanceEntryInitiatorType =\n  | 'beacon'\n  | 'css'\n  | 'fetch'\n  | 'img'\n  | 'other'\n  | 'script'\n  | 'xmlhttprequest';\n\nexport declare interface IPerformanceEntry {\n  decodedBodySize?: number;\n  duration: number;\n  entryType: IPerformanceObserverType;\n  initiatorType?: IPerformanceEntryInitiatorType;\n  loadTime: number;\n  name: string;\n  renderTime: number;\n  startTime: number;\n  hadRecentInput?: boolean;\n  value?: number;\n  identifier?: string;\n}\n\n// https://wicg.github.io/event-timing/#sec-performance-event-timing\nexport interface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: DOMHighResTimeStamp;\n  target?: Node;\n}\n\nexport interface IPerformancePaintTiming {\n  name: string;\n  entryType: string;\n  startTime: number;\n  duration: number;\n}\n\nexport interface IPerfumeNavigationTiming {\n  fetchTime?: number;\n  workerTime?: number;\n  totalTime?: number;\n  downloadTime?: number;\n  timeToFirstByte?: number;\n  headerSize?: number;\n  dnsLookupTime?: number;\n  redirectTime?: number;\n}\n\nexport type EffectiveConnectionType = '2g' | '3g' | '4g' | 'slow-2g' | 'lte';\n\nexport interface IPerfumeNetworkInformation {\n  downlink?: number;\n  effectiveType?: EffectiveConnectionType;\n  onchange?: () => void;\n  rtt?: number;\n  saveData?: boolean;\n}\n\nexport interface IPerfumeDataConsumption {\n  beacon: number;\n  css: number;\n  fetch: number;\n  img: number;\n  other: number;\n  script: number;\n  total: number;\n  xmlhttprequest: number;\n}\n\nexport type IPerfumeData =\n  | number\n  | IPerfumeNavigationTiming\n  | IPerfumeNetworkInformation;\n\nexport type IVitalsScore = 'good' | 'needsImprovement' | 'poor' | null;\n\nexport type INavigationType =\n  | 'navigate'\n  | 'reload'\n  | 'back-forward'\n  | 'back-forward-cache'\n  | 'prerender';\n\nexport interface IVitalsThresholds {\n  vitalsThresholds: [number, number];\n}\nexport interface IOutlierThreshold {\n  maxOutlierThreshold: number;\n}\n\nexport enum IThresholdTier {\n  instant = 'instant',\n  quick = 'quick',\n  moderate = 'moderate',\n  slow = 'slow',\n  unavoidable = 'unavoidable',\n}\n\nexport type IStepsThresholdConfig = IVitalsThresholds & IOutlierThreshold;\nexport type IStepsThresholds = {\n  [key in IThresholdTier]: IStepsThresholdConfig;\n};\n\nexport type ISteps<Steps extends string> = {\n  steps: Steps[];\n} & Partial<IOutlierThreshold>;\n\nexport interface IStepMarks<Marks extends string> {\n  marks: [Marks | 'launch', Marks];\n}\n\nexport type IStepConfig<Marks extends string> = {\n  threshold: IThresholdTier;\n} & IStepMarks<Marks>;\n\nexport type IStepsConfig = Record<string, IStepConfig<string>>;\n","// Have private variable outside the class,\n// helps drastically reduce the library size\nexport const W = globalThis;\nexport const C = W.console;\nexport const WN = W.navigator;\nexport const WP = W.performance;\nexport const getDM = () => (WN as any).deviceMemory;\nexport const getHC = () => (WN as any).hardwareConcurrency;\nexport const M = 'mark.'; // Mark Prefix\nexport const S = 'step.'; // Step Prefix\n","import { WP } from './constants';\n\n/**\n * True if the browser supports the Navigation Timing API,\n * User Timing API and the PerformanceObserver Interface.\n * In Safari, the User Timing API (performance.mark()) is not available,\n * so the DevTools timeline will not be annotated with marks.\n * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n * Support: developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver\n * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/getEntriesByType\n */\nexport const isPerformanceSupported = (): boolean =>\n  WP && !!WP.getEntriesByType && !!WP.now && !!WP.mark;\n","import { WN } from './constants';\nimport { EffectiveConnectionType, IPerfumeNetworkInformation } from './types';\n\nexport let et: EffectiveConnectionType = '4g';\nexport let sd = false;\n\nexport const getNetworkInformation = (): IPerfumeNetworkInformation => {\n  if ('connection' in WN) {\n    const dataConnection = (WN as any).connection;\n    if (typeof dataConnection !== 'object') {\n      return {};\n    }\n    et = dataConnection.effectiveType;\n    sd = !!dataConnection.saveData;\n    return {\n      downlink: dataConnection.downlink,\n      effectiveType: dataConnection.effectiveType,\n      rtt: dataConnection.rtt,\n      saveData: !!dataConnection.saveData,\n    };\n  }\n  return {};\n};\n","import { IMetricMap, IPerfumeDataConsumption } from './types';\n\nexport const metrics: IMetricMap = {};\nexport const fcp = {\n  value: 0,\n};\nexport const rt: { value: IPerfumeDataConsumption } = {\n  value: {\n    beacon: 0,\n    css: 0,\n    fetch: 0,\n    img: 0,\n    other: 0,\n    script: 0,\n    total: 0,\n    xmlhttprequest: 0,\n  },\n};\nexport const tbt = {\n  value: 0,\n};\nexport const ntbt = {\n  value: 0,\n};\n","import { IPerfObservers } from './types';\n\nexport const perfObservers: IPerfObservers = {};\n","export const visibility = {\n  isHidden: false,\n  didChange: false,\n};\n\n/**\n * From visibilitychange listener it saves only when\n * the page gets hidden, because it's important to not\n * use the wrong \"hidden\" value when send timing or logging.\n */\nexport const didVisibilityChange = function () {\n  visibility.isHidden = false;\n  if (document.hidden) {\n    visibility.isHidden = document.hidden;\n    visibility.didChange = true;\n  }\n};\n","import { C } from './constants';\nimport { perfObservers } from './observeInstances';\nimport { IPerformanceObserverType } from './types';\n\n/**\n * PerformanceObserver subscribes to performance events as they happen\n * and respond to them asynchronously.\n */\nexport const po = (\n  eventType: IPerformanceObserverType,\n  cb: (performanceEntries: any[]) => void,\n): PerformanceObserver | null => {\n  try {\n    const perfObserver = new PerformanceObserver(entryList => {\n      cb(entryList.getEntries());\n    });\n    // Retrieve buffered events and subscribe to newer events for Paint Timing\n    perfObserver.observe({ type: eventType, buffered: true });\n    return perfObserver;\n  } catch (e) {\n    C.warn('Perfume.js:', e);\n  }\n  return null;\n};\n\nexport const poDisconnect = (observer: any) => {\n  if (perfObservers[observer]) {\n    perfObservers[observer].disconnect();\n  }\n  delete perfObservers[observer];\n};\n","import { getDM, getHC } from './constants';\nimport { EffectiveConnectionType } from './types';\n\nexport const getIsLowEndDevice = (): boolean => {\n  // If number of logical processors available to run threads <= 4\n  if (getHC() && getHC() <= 4) {\n    return true;\n  }\n  // If the approximate amount of RAM client device has <= 4\n  if (getDM() && getDM() <= 4) {\n    return true;\n  }\n  return false;\n};\n\nexport const getIsLowEndExperience = (\n  et: EffectiveConnectionType,\n  sd: boolean,\n): boolean => {\n  // If the effective type of the connection meaning\n  // one of 'slow-2g', '2g', '3g', or '4g' is !== 4g\n  switch (et) {\n    case 'slow-2g':\n      return true;\n    case '2g':\n      return true;\n    case '3g':\n      return true;\n    default:\n      // Data Saver preference\n      return getIsLowEndDevice() || sd;\n  }\n};\n","import { W } from './constants';\n\nexport const roundByFour = (num: number) => parseFloat(num.toFixed(4));\n\nexport const convertToKB = (bytes: number): number | null => {\n  if (typeof bytes !== 'number') {\n    return null;\n  }\n  return roundByFour(bytes / Math.pow(1024, 2));\n};\n\n/**\n * PushTask to requestIdleCallback\n */\nexport const pushTask = (cb: any): void => {\n  if ('requestIdleCallback' in W) {\n    (W as any).requestIdleCallback(cb, { timeout: 3000 });\n  } else {\n    cb();\n  }\n};\n","import { config } from './config';\nimport { getNavigatorInfo } from './getNavigatorInfo';\nimport { visibility } from './onVisibilityChange';\nimport { IVitalsScore, INavigationType } from './types';\nimport { pushTask } from './utils';\n\n/**\n * Sends the User timing measure to analyticsTracker\n */\nexport const reportPerf = (\n  measureName: string,\n  data: any,\n  rating: IVitalsScore,\n  attribution: object,\n  navigationType?: INavigationType,\n): void => {\n  const reportTask = () => {\n    if (!config.analyticsTracker) {\n      return;\n    }\n    // Doesn't send timing when page is hidden\n    if (visibility.isHidden && !['CLS', 'INP'].includes(measureName)) {\n      return;\n    }\n    // Send metric to custom Analytics service\n    config.analyticsTracker({\n      attribution,\n      metricName: measureName,\n      data,\n      navigatorInformation: getNavigatorInfo(),\n      rating,\n      navigationType,\n    });\n  };\n\n  // Send CLS and INP metrics immediately,\n  // because this metrics are reported when page is hidden or closed\n  if (['CLS', 'INP'].includes(measureName)) {\n    reportTask();\n  } else {\n    pushTask(reportTask);\n  }\n};\n","import { getDM, getHC, WN } from './constants';\nimport { et, sd } from './getNetworkInformation';\nimport { getIsLowEndDevice, getIsLowEndExperience } from './isLowEnd';\nimport { INavigatorInfo } from './types';\n\n/**\n * Information coming from window.navigator:\n * 1. Device Memory\n * 2. Hardware Concurency\n * 3. Status of the service worker:\n *    - controlled: a service worker is controlling the page\n *    - supported: the browser supports service worker\n *    - unsupported: the user's browser does not support service worker\n */\nexport const getNavigatorInfo = (): INavigatorInfo => {\n  if (WN) {\n    return {\n      deviceMemory: getDM() || 0,\n      hardwareConcurrency: getHC() || 0,\n      serviceWorkerStatus:\n        'serviceWorker' in WN\n          ? WN.serviceWorker.controller\n            ? 'controlled'\n            : 'supported'\n          : 'unsupported',\n      isLowEndDevice: getIsLowEndDevice(),\n      isLowEndExperience: getIsLowEndExperience(et, sd),\n    };\n  }\n  return {};\n};\n","import { fcp, tbt, ntbt } from './metrics';\nimport { IPerformanceEntry } from './types';\n\nexport const initTotalBlockingTime = (\n  performanceEntries: IPerformanceEntry[],\n): void => {\n  performanceEntries.forEach(entry => {\n    if (entry.name !== 'self' || entry.startTime < fcp.value) {\n      return;\n    }\n    const blockingTime = entry.duration - 50;\n    if (blockingTime > 0) {\n      tbt.value += blockingTime;\n      ntbt.value += blockingTime;\n    }\n  });\n};\n","import { IThresholdTier, IStepsThresholds, IVitalsScore } from './types';\n\nconst rtScore = [100, 200];\nconst tbtScore = [200, 600];\nconst ntbtScore = [200, 600];\n\nexport const STEP_THRESHOLDS: IStepsThresholds = {\n  [IThresholdTier.instant]: {\n    vitalsThresholds: [100, 200],\n    maxOutlierThreshold: 10000,\n  },\n  [IThresholdTier.quick]: {\n    vitalsThresholds: [200, 500],\n    maxOutlierThreshold: 10000,\n  },\n  [IThresholdTier.moderate]: {\n    vitalsThresholds: [500, 1000],\n    maxOutlierThreshold: 10000,\n  },\n  [IThresholdTier.slow]: {\n    vitalsThresholds: [1000, 2000],\n    maxOutlierThreshold: 10000,\n  },\n  [IThresholdTier.unavoidable]: {\n    vitalsThresholds: [2000, 5000],\n    maxOutlierThreshold: 20000,\n  },\n};\n\nexport const webVitalsScore: Record<string, number[]> = {\n  RT: rtScore,\n  TBT: tbtScore,\n  NTBT: ntbtScore,\n};\n\nexport const getRating = (\n  value: number,\n  vitalsThresholds: [number, number],\n): IVitalsScore => {\n  if (value <= vitalsThresholds[0]) {\n    return 'good';\n  }\n  return value <= vitalsThresholds[1] ? 'needsImprovement' : 'poor';\n};\n\nexport const getVitalsScore = (\n  measureName: string,\n  value: number,\n): IVitalsScore => {\n  if (!webVitalsScore[measureName]) {\n    return null;\n  }\n  if (value <= webVitalsScore[measureName][0]) {\n    return 'good';\n  }\n  return value <= webVitalsScore[measureName][1] ? 'needsImprovement' : 'poor';\n};\n","var e,t,n,r,i,a=function(){return window.performance&&performance.getEntriesByType&&performance.getEntriesByType(\"navigation\")[0]},o=function(e){if(\"loading\"===document.readyState)return\"loading\";var t=a();if(t){if(e<t.domInteractive)return\"loading\";if(0===t.domContentLoadedEventStart||e<t.domContentLoadedEventStart)return\"dom-interactive\";if(0===t.domComplete||e<t.domComplete)return\"dom-content-loaded\"}return\"complete\"},u=function(e){var t=e.nodeName;return 1===e.nodeType?t.toLowerCase():t.toUpperCase().replace(/^#/,\"\")},c=function(e,t){var n=\"\";try{for(;e&&9!==e.nodeType;){var r=e,i=r.id?\"#\"+r.id:u(r)+(r.classList&&r.classList.value&&r.classList.value.trim()&&r.classList.value.trim().length?\".\"+r.classList.value.trim().replace(/\\s+/g,\".\"):\"\");if(n.length+i.length>(t||100)-1)return n||i;if(n=n?i+\">\"+n:i,r.id)break;e=r.parentNode}}catch(e){}return n},s=-1,f=function(){return s},d=function(e){addEventListener(\"pageshow\",(function(t){t.persisted&&(s=t.timeStamp,e(t))}),!0)},l=function(){var e=a();return e&&e.activationStart||0},m=function(e,t){var n=a(),r=\"navigate\";f()>=0?r=\"back-forward-cache\":n&&(document.prerendering||l()>0?r=\"prerender\":document.wasDiscarded?r=\"restore\":n.type&&(r=n.type.replace(/_/g,\"-\")));return{name:e,value:void 0===t?-1:t,rating:\"good\",delta:0,entries:[],id:\"v3-\".concat(Date.now(),\"-\").concat(Math.floor(8999999999999*Math.random())+1e12),navigationType:r}},v=function(e,t,n){try{if(PerformanceObserver.supportedEntryTypes.includes(e)){var r=new PerformanceObserver((function(e){Promise.resolve().then((function(){t(e.getEntries())}))}));return r.observe(Object.assign({type:e,buffered:!0},n||{})),r}}catch(e){}},p=function(e,t,n,r){var i,a;return function(o){t.value>=0&&(o||r)&&((a=t.value-(i||0))||void 0===i)&&(i=t.value,t.delta=a,t.rating=function(e,t){return e>t[1]?\"poor\":e>t[0]?\"needs-improvement\":\"good\"}(t.value,n),e(t))}},h=function(e){requestAnimationFrame((function(){return requestAnimationFrame((function(){return e()}))}))},g=function(e){var t=function(t){\"pagehide\"!==t.type&&\"hidden\"!==document.visibilityState||e(t)};addEventListener(\"visibilitychange\",t,!0),addEventListener(\"pagehide\",t,!0)},T=function(e){var t=!1;return function(n){t||(e(n),t=!0)}},y=-1,E=function(){return\"hidden\"!==document.visibilityState||document.prerendering?1/0:0},S=function(e){\"hidden\"===document.visibilityState&&y>-1&&(y=\"visibilitychange\"===e.type?e.timeStamp:0,b())},L=function(){addEventListener(\"visibilitychange\",S,!0),addEventListener(\"prerenderingchange\",S,!0)},b=function(){removeEventListener(\"visibilitychange\",S,!0),removeEventListener(\"prerenderingchange\",S,!0)},C=function(){return y<0&&(y=E(),L(),d((function(){setTimeout((function(){y=E(),L()}),0)}))),{get firstHiddenTime(){return y}}},w=function(e){document.prerendering?addEventListener(\"prerenderingchange\",(function(){return e()}),!0):e()},M=[1800,3e3],x=function(e,t){t=t||{},w((function(){var n,r=C(),i=m(\"FCP\"),a=v(\"paint\",(function(e){e.forEach((function(e){\"first-contentful-paint\"===e.name&&(a.disconnect(),e.startTime<r.firstHiddenTime&&(i.value=Math.max(e.startTime-l(),0),i.entries.push(e),n(!0)))}))}));a&&(n=p(e,i,M,t.reportAllChanges),d((function(r){i=m(\"FCP\"),n=p(e,i,M,t.reportAllChanges),h((function(){i.value=performance.now()-r.timeStamp,n(!0)}))})))}))},A=[.1,.25],F=function(e,t){!function(e,t){t=t||{},x(T((function(){var n,r=m(\"CLS\",0),i=0,a=[],o=function(e){e.forEach((function(e){if(!e.hadRecentInput){var t=a[0],n=a[a.length-1];i&&e.startTime-n.startTime<1e3&&e.startTime-t.startTime<5e3?(i+=e.value,a.push(e)):(i=e.value,a=[e])}})),i>r.value&&(r.value=i,r.entries=a,n())},u=v(\"layout-shift\",o);u&&(n=p(e,r,A,t.reportAllChanges),g((function(){o(u.takeRecords()),n(!0)})),d((function(){i=0,r=m(\"CLS\",0),n=p(e,r,A,t.reportAllChanges),h((function(){return n()}))})),setTimeout(n,0))})))}((function(t){!function(e){if(e.entries.length){var t=e.entries.reduce((function(e,t){return e&&e.value>t.value?e:t}));if(t&&t.sources&&t.sources.length){var n=(r=t.sources).find((function(e){return e.node&&1===e.node.nodeType}))||r[0];if(n)return void(e.attribution={largestShiftTarget:c(n.node),largestShiftTime:t.startTime,largestShiftValue:t.value,largestShiftSource:n,largestShiftEntry:t,loadState:o(t.startTime)})}}var r;e.attribution={}}(t),e(t)}),t)},I=function(e,t){x((function(t){!function(e){if(e.entries.length){var t=a(),n=e.entries[e.entries.length-1];if(t){var r=t.activationStart||0,i=Math.max(0,t.responseStart-r);return void(e.attribution={timeToFirstByte:i,firstByteToFCP:e.value-i,loadState:o(e.entries[0].startTime),navigationEntry:t,fcpEntry:n})}}e.attribution={timeToFirstByte:0,firstByteToFCP:e.value,loadState:o(f())}}(t),e(t)}),t)},P={passive:!0,capture:!0},B=new Date,D=function(r,i){e||(e=i,t=r,n=new Date,q(removeEventListener),k())},k=function(){if(t>=0&&t<n-B){var i={entryType:\"first-input\",name:e.type,target:e.target,cancelable:e.cancelable,startTime:e.timeStamp,processingStart:e.timeStamp+t};r.forEach((function(e){e(i)})),r=[]}},R=function(e){if(e.cancelable){var t=(e.timeStamp>1e12?new Date:performance.now())-e.timeStamp;\"pointerdown\"==e.type?function(e,t){var n=function(){D(e,t),i()},r=function(){i()},i=function(){removeEventListener(\"pointerup\",n,P),removeEventListener(\"pointercancel\",r,P)};addEventListener(\"pointerup\",n,P),addEventListener(\"pointercancel\",r,P)}(t,e):D(t,e)}},q=function(e){[\"mousedown\",\"keydown\",\"touchstart\",\"pointerdown\"].forEach((function(t){return e(t,R,P)}))},H=[100,300],N=function(n,i){i=i||{},w((function(){var a,o=C(),u=m(\"FID\"),c=function(e){e.startTime<o.firstHiddenTime&&(u.value=e.processingStart-e.startTime,u.entries.push(e),a(!0))},s=function(e){e.forEach(c)},f=v(\"first-input\",s);a=p(n,u,H,i.reportAllChanges),f&&g(T((function(){s(f.takeRecords()),f.disconnect()}))),f&&d((function(){var o;u=m(\"FID\"),a=p(n,u,H,i.reportAllChanges),r=[],t=-1,e=null,q(addEventListener),o=c,r.push(o),k()}))}))},O=function(e,t){N((function(t){!function(e){var t=e.entries[0];e.attribution={eventTarget:c(t.target),eventType:t.name,eventTime:t.startTime,eventEntry:t,loadState:o(t.startTime)}}(t),e(t)}),t)},j=0,U=1/0,V=0,_=function(e){e.forEach((function(e){e.interactionId&&(U=Math.min(U,e.interactionId),V=Math.max(V,e.interactionId),j=V?(V-U)/7+1:0)}))},z=function(){return i?j:performance.interactionCount||0},G=function(){\"interactionCount\"in performance||i||(i=v(\"event\",_,{type:\"event\",buffered:!0,durationThreshold:0}))},J=[200,500],K=0,Q=function(){return z()-K},W=[],X={},Y=function(e){var t=W[W.length-1],n=X[e.interactionId];if(n||W.length<10||e.duration>t.latency){if(n)n.entries.push(e),n.latency=Math.max(n.latency,e.duration);else{var r={id:e.interactionId,latency:e.duration,entries:[e]};X[r.id]=r,W.push(r)}W.sort((function(e,t){return t.latency-e.latency})),W.splice(10).forEach((function(e){delete X[e.id]}))}},Z=function(e,t){t=t||{},w((function(){var n;G();var r,i=m(\"INP\"),a=function(e){e.forEach((function(e){(e.interactionId&&Y(e),\"first-input\"===e.entryType)&&(!W.some((function(t){return t.entries.some((function(t){return e.duration===t.duration&&e.startTime===t.startTime}))}))&&Y(e))}));var t,n=(t=Math.min(W.length-1,Math.floor(Q()/50)),W[t]);n&&n.latency!==i.value&&(i.value=n.latency,i.entries=n.entries,r())},o=v(\"event\",a,{durationThreshold:null!==(n=t.durationThreshold)&&void 0!==n?n:40});r=p(e,i,J,t.reportAllChanges),o&&(\"PerformanceEventTiming\"in window&&\"interactionId\"in PerformanceEventTiming.prototype&&o.observe({type:\"first-input\",buffered:!0}),g((function(){a(o.takeRecords()),i.value<0&&Q()>0&&(i.value=0,i.entries=[]),r(!0)})),d((function(){W=[],K=z(),i=m(\"INP\"),r=p(e,i,J,t.reportAllChanges)})))}))},$=function(e,t){Z((function(t){!function(e){if(e.entries.length){var t=e.entries.sort((function(e,t){return t.duration-e.duration||t.processingEnd-t.processingStart-(e.processingEnd-e.processingStart)}))[0],n=e.entries.find((function(e){return e.target}));e.attribution={eventTarget:c(n&&n.target),eventType:t.name,eventTime:t.startTime,eventEntry:t,loadState:o(t.startTime)}}else e.attribution={}}(t),e(t)}),t)},ee=[2500,4e3],te={},ne=function(e,t){!function(e,t){t=t||{},w((function(){var n,r=C(),i=m(\"LCP\"),a=function(e){var t=e[e.length-1];t&&t.startTime<r.firstHiddenTime&&(i.value=Math.max(t.startTime-l(),0),i.entries=[t],n())},o=v(\"largest-contentful-paint\",a);if(o){n=p(e,i,ee,t.reportAllChanges);var u=T((function(){te[i.id]||(a(o.takeRecords()),o.disconnect(),te[i.id]=!0,n(!0))}));[\"keydown\",\"click\"].forEach((function(e){addEventListener(e,(function(){return setTimeout(u,0)}),!0)})),g(u),d((function(r){i=m(\"LCP\"),n=p(e,i,ee,t.reportAllChanges),h((function(){i.value=performance.now()-r.timeStamp,te[i.id]=!0,n(!0)}))}))}}))}((function(t){!function(e){if(e.entries.length){var t=a();if(t){var n=t.activationStart||0,r=e.entries[e.entries.length-1],i=r.url&&performance.getEntriesByType(\"resource\").filter((function(e){return e.name===r.url}))[0],o=Math.max(0,t.responseStart-n),u=Math.max(o,i?(i.requestStart||i.startTime)-n:0),s=Math.max(u,i?i.responseEnd-n:0),f=Math.max(s,r?r.startTime-n:0),d={element:c(r.element),timeToFirstByte:o,resourceLoadDelay:u-o,resourceLoadTime:s-u,elementRenderDelay:f-s,navigationEntry:t,lcpEntry:r};return r.url&&(d.url=r.url),i&&(d.lcpResourceEntry=i),void(e.attribution=d)}}e.attribution={timeToFirstByte:0,resourceLoadDelay:0,resourceLoadTime:0,elementRenderDelay:e.value}}(t),e(t)}),t)},re=[800,1800],ie=function e(t){document.prerendering?w((function(){return e(t)})):\"complete\"!==document.readyState?addEventListener(\"load\",(function(){return e(t)}),!0):setTimeout(t,0)},ae=function(e,t){t=t||{};var n=m(\"TTFB\"),r=p(e,n,re,t.reportAllChanges);ie((function(){var i=a();if(i){var o=i.responseStart;if(o<=0||o>performance.now())return;n.value=Math.max(o-l(),0),n.entries=[i],r(!0),d((function(){n=m(\"TTFB\",0),(r=p(e,n,re,t.reportAllChanges))(!0)}))}}))},oe=function(e,t){ae((function(t){!function(e){if(e.entries.length){var t=e.entries[0],n=t.activationStart||0,r=Math.max(t.domainLookupStart-n,0),i=Math.max(t.connectStart-n,0),a=Math.max(t.requestStart-n,0);e.attribution={waitingTime:r,dnsTime:i-r,connectionTime:a-i,requestTime:e.value-a,navigationEntry:t}}else e.attribution={waitingTime:0,dnsTime:0,connectionTime:0,requestTime:0}}(t),e(t)}),t)};export{A as CLSThresholds,M as FCPThresholds,H as FIDThresholds,J as INPThresholds,ee as LCPThresholds,re as TTFBThresholds,F as onCLS,I as onFCP,O as onFID,$ as onINP,ne as onLCP,oe as onTTFB};\n","import { config } from './config';\nimport { fcp, rt, tbt } from './metrics';\nimport { perfObservers } from './observeInstances';\nimport { visibility } from './onVisibilityChange';\nimport { po } from './performanceObserver';\nimport { reportPerf } from './reportPerf';\nimport { initTotalBlockingTime } from './totalBlockingTime';\nimport { Metric } from './types';\nimport { roundByFour } from './utils';\nimport { getVitalsScore } from './vitalsScore';\n\nexport const logData = (\n  measureName: string,\n  metric: any,\n  attribution?: object,\n): void => {\n  Object.keys(metric).forEach(key => {\n    if (typeof metric[key] === 'number') {\n      metric[key] = roundByFour(metric[key]);\n    }\n  });\n  // Sends the metric to an external tracking service\n  reportPerf(measureName, metric, null, attribution || {});\n};\n\n/**\n * Dispatches the metric duration into internal logs\n * and the external time tracking service.\n */\nexport const logMetric = ({\n  attribution,\n  name,\n  rating,\n  value,\n  navigationType,\n}: Metric): void => {\n  // TODO Add docs\n  if (name === 'FCP') {\n    fcp.value = value;\n  }\n  // TODO Add docs\n  // create longtask observer only once, otherwise entries will be duplicated\n  if (['FCP', 'LCP'].includes(name) && !perfObservers[0]) {\n    perfObservers[0] = po('longtask', initTotalBlockingTime);\n  }\n  // TODO Add docs\n  if ('FID' === name) {\n    setTimeout(() => {\n      if (visibility.didChange) {\n        return;\n      }\n      logMetric({\n        attribution,\n        name: 'TBT',\n        rating: getVitalsScore('TBT', tbt.value),\n        value: tbt.value,\n        navigationType,\n      });\n      logData('dataConsumption', rt.value);\n    }, 10000);\n  }\n  // TODO Add docs\n  const duration2Decimal = roundByFour(value);\n  if (duration2Decimal <= config.maxTime && duration2Decimal >= 0) {\n    // Sends the metric to an external tracking service\n    reportPerf(name, duration2Decimal, rating, attribution, navigationType);\n  }\n};\n","import { logMetric } from './log';\nimport { IPerformanceEntry } from './types';\n\nexport const initElementTiming = (performanceEntries: IPerformanceEntry[]) => {\n  performanceEntries.forEach(entry => {\n    if (entry.identifier) {\n      logMetric({\n        attribution: {\n          identifier: entry.identifier,\n        },\n        name: 'ET',\n        rating: null,\n        value: entry.startTime,\n      });\n    }\n  });\n};\n","import { config } from './config';\nimport { logData } from './log';\nimport { rt } from './metrics';\nimport { IPerformanceEntry } from './types';\n\nexport const initResourceTiming = (performanceEntries: IPerformanceEntry[]) => {\n  performanceEntries.forEach(entry => {\n    if (config.isResourceTiming) {\n      logData('resourceTiming', entry);\n    }\n    if (entry.decodedBodySize && entry.initiatorType) {\n      const bodySize = entry.decodedBodySize / 1000;\n      rt.value[entry.initiatorType] += bodySize;\n      rt.value.total += bodySize;\n    }\n  });\n};\n","import {\n  onCLS,\n  onFCP,\n  onFID,\n  onINP,\n  onLCP,\n  onTTFB,\n} from 'web-vitals/attribution';\n\nimport { config } from './config';\nimport { initElementTiming } from './element-timing';\nimport { logMetric } from './log';\nimport { po } from './performanceObserver';\nimport { initResourceTiming } from './resourceTiming';\n\nexport const initPerformanceObserver = (): void => {\n  onTTFB(report => {\n    if (report.value > 0) {\n      // @ts-ignore\n      logMetric(report);\n    }\n  }, config.reportOptions.ttfb);\n  // @ts-ignore\n  onCLS(report => logMetric(report), config.reportOptions.cls);\n  // @ts-ignore\n  onFCP(report => logMetric(report), config.reportOptions.fcp);\n  // @ts-ignore\n  onFID(report => logMetric(report), config.reportOptions.fid);\n  // @ts-ignore\n  onLCP(report => logMetric(report), config.reportOptions.lcp);\n  // @ts-ignore\n  onINP(report => logMetric(report), config.reportOptions.inp);\n\n  if (config.isResourceTiming) {\n    po('resource', initResourceTiming);\n  }\n  if (config.isElementTiming) {\n    po('element', initElementTiming);\n  }\n};\n\nexport const disconnectPerfObserversHidden = (): void => {\n  // TODO: Use if need it\n};\n","import { logData } from './log';\nimport { convertToKB } from './utils';\n\n/**\n * The estimate() method of the StorageManager interface asks the Storage Manager\n * for how much storage the app takes up (usage),\n * and how much space is available (quota).\n */\nexport const reportStorageEstimate = (storageInfo: StorageEstimate) => {\n  const estimateUsageDetails =\n    'usageDetails' in storageInfo ? (storageInfo as any).usageDetails : {};\n  logData('storageEstimate', {\n    quota: convertToKB((storageInfo as any).quota),\n    usage: convertToKB((storageInfo as any).usage),\n    caches: convertToKB(estimateUsageDetails.caches),\n    indexedDB: convertToKB(estimateUsageDetails.indexedDB),\n    serviceWorker: convertToKB(estimateUsageDetails.serviceWorkerRegistrations),\n  });\n};\n","export const steps = {\n  finalMarkToStepsMap: {} as Record<string, Record<string, string[]>>,\n  startMarkToStepsMap: {} as Record<string, Record<string, boolean>>,\n  active: {} as Record<string, boolean>,\n  /**\n    An internal data structure to represent the state of active steps.\n    In this data structure, the keys represent the navgiation index, starting at 0 - \n    i.e - the initial app launch it's index 0, the first navigation is index 1 and so one.\n    The value of each navigation index is a Set of all the first marks for the currently active steps. \n    When a start mark is hit - it will be added to this state. \n    When a corresponding end mark is hit, the start mark previously added will be removed from this navigation state\n    Examples:\n    Example of the state when home is loading:\n    {\n      [0]: ['start_navigate_to_home_screen'] // load home - empty array since home has loaded\n    }\n    Example of the state during the navigation from home to assets\n    {\n      [0]: [] // load home - empty array since home has loaded\n      [1]: ['start_navigate_to_trade_screen']\n    }\n   */\n  navigationSteps: {} as Record<number, Record<string, boolean>>,\n};\n\n/**\n * This method allows to add new steps by passing the start mark\n */\nexport const addActiveSteps = (startMark: string) => {\n  const newSteps = steps.startMarkToStepsMap[startMark] ?? [];\n  // adding the new steps to the active map\n  Object.keys(newSteps).forEach(step => {\n    if (steps.active[step]) {\n      return;\n    } else {\n      steps.active[step] = true;\n    }\n  });\n};\n\nexport const resetNavigationSteps = () => {\n  steps.navigationSteps = {};\n}\n\n/**\n * Removes one step from active steps\n */\nexport const removeActiveStep = (step: string) => {\n  delete steps.active[step];\n};\n\nexport const resetActiveSteps = () => {\n  steps.active = {};\n};\n\nexport const resetSteps = () => {\n  // reset all values\n  steps.startMarkToStepsMap = {};\n  steps.finalMarkToStepsMap = {};\n  resetActiveSteps();\n  resetNavigationSteps();\n};\n\nexport const getNavigationState = () => steps.navigationSteps \n\nexport const getStepsFromNavigation = (navIndex: number) =>  {\n  const navigationSteps = getNavigationState();\n  return navigationSteps[navIndex] ?? {};\n}\n","import { M, S, WP } from '../constants';\nimport { reportPerf } from '../reportPerf';\nimport { config } from '../config';\n\nimport { STEP_THRESHOLDS, getRating } from '../vitalsScore';\n\nexport const measureStep = (\n  step: string,\n  startMark: string,\n  endMark: string,\n) => {\n  const stepMetricName = S + step;\n  const startMarkExists = WP.getEntriesByName(M + startMark).length > 0;\n  const endMarkExists = WP.getEntriesByName(M + endMark).length > 0;\n  if (\n    !endMarkExists ||\n    !startMarkExists ||\n    !config.steps ||\n    !config.steps[step]\n  ) {\n    return;\n  }\n\n  const { maxOutlierThreshold, vitalsThresholds } =\n    STEP_THRESHOLDS[config.steps[step].threshold];\n\n  const stepMeasure = WP.measure(stepMetricName, M + startMark, M + endMark);\n\n  // checking to ensure stepMeasure is defined - it can be undefined\n  // if measure is called on a mark that has already been measured and cleared\n  if (!stepMeasure) {\n    return;\n  }\n\n  const { duration } = stepMeasure;\n  if (duration <= maxOutlierThreshold) {\n    const score = getRating(duration, vitalsThresholds);\n    // Do not want to measure or log negative metrics\n    if (duration >= 0) {\n      reportPerf(\n        'userJourneyStep',\n        duration,\n        score,\n        { stepName: step },\n        undefined,\n      );\n      WP.measure(`step.${step}_vitals_${score}`, {\n        start: stepMeasure.startTime + stepMeasure.duration,\n        end: stepMeasure.startTime + stepMeasure.duration,\n        detail: {\n          type: 'stepVital',\n          duration,\n        },\n      });\n    }\n  }\n};\n","import { config } from './../config';\nimport { getNavigationState, getStepsFromNavigation, steps } from './steps';\n\n/**\n * We only report the active steps in the last 2 navigation step to prevent\n * Convert the steps.navigationSteps to an array of active steps.\n * \"stale steps\" from being reported.\n *\n * \"stale steps\" are defined as steps where the start mark was executed but the\n * corresponding end mark was never executed - thus leaving it as a \"stale step\"\n */\nexport const getActiveStepsFromNavigationSteps = (): Record<\n  string,\n  boolean\n> => {\n  const navigationSteps = getNavigationState();\n  const { startMarkToStepsMap } = steps;\n  const numberOfSteps = Object.keys(navigationSteps).length;\n  if (numberOfSteps === 0) {\n    return {};\n  }\n\n  const activeSteps: Record<string, boolean> = {};\n  const currentNavIndex = numberOfSteps - 1;\n\n  const currentNavStep = getStepsFromNavigation(currentNavIndex);\n\n  Object.keys(currentNavStep).forEach((startMark: string) => {\n    const ongoingSteps = startMarkToStepsMap[startMark] ?? [];\n    Object.keys(ongoingSteps).forEach(step => {\n      activeSteps[step] = true;\n    });\n  });\n\n  // if nav length is >1, then check the nav step prior as well\n  if (numberOfSteps > 1) {\n    const prevNavStep = getStepsFromNavigation(currentNavIndex - 1);\n\n    Object.keys(prevNavStep).forEach((startMark: string) => {\n      const prevNavSteps = startMarkToStepsMap[startMark] ?? [];\n      Object.keys(prevNavSteps).forEach(step => {\n        activeSteps[step] = true;\n      });\n    });\n  }\n\n  return activeSteps;\n};\n\n// start mark for navigationSteps data structure\nexport const recordStartMark = (startMark: string) => {\n  const { navigationSteps } = steps;\n  const numberOfSteps = Object.keys(navigationSteps).length;\n\n  // if we don't have any initial states recorded, initialize one\n  const navigationLength = numberOfSteps > 0 ? numberOfSteps : 1;\n  const lastNavIndex = navigationLength - 1;\n  const currentMarks = getStepsFromNavigation(lastNavIndex) || [];\n\n  const newCurrentMark = currentMarks;\n  newCurrentMark[startMark] = true;\n  navigationSteps[lastNavIndex] = newCurrentMark;\n};\n\nexport const recordEndMark = (endMark: string) => {\n  const { navigationSteps, finalMarkToStepsMap } = steps;\n\n  const navigationLength = Object.keys(navigationSteps).length;\n  if (navigationLength === 0) {\n    return;\n  }\n\n  const currentNavIndex = navigationLength - 1;\n  const ongoingNavStep = getStepsFromNavigation(currentNavIndex);\n\n  if (!ongoingNavStep || !finalMarkToStepsMap[endMark]) {\n    return;\n  }\n\n  const endMarkMap = finalMarkToStepsMap[endMark];\n  if (!endMarkMap) {\n    return;\n  }\n\n  /**\n   * loop through all steps where end mark is present and check if their start mark is present\n   * in the navigation state. If so, remove it to signal that the step has been completed\n   */\n  Object.keys(endMarkMap).forEach(startMark => {\n    if (ongoingNavStep[startMark]) {\n      const currentNavStep = getStepsFromNavigation(currentNavIndex) || {};\n\n      // Only remove the startMark, not other ongoing steps\n      currentNavStep[startMark] = false;\n      // if start mark is in navigation state, remove it to signal that the step has completed\n      navigationSteps[currentNavIndex] = currentNavStep;\n    }\n\n    // if nav length is >1, then check the nav step prior as well\n    if (navigationLength > 1) {\n      const lastNavIndex = currentNavIndex - 1;\n      const lastNavStep = getStepsFromNavigation(lastNavIndex);\n      if (lastNavStep[startMark]) {\n        lastNavStep[startMark] = false;\n        navigationSteps[lastNavIndex] = lastNavStep;\n      }\n    }\n  });\n};\n\n/**\n * An API consumers must use to update internal state based on page/screen navigations.\n * Internal state must be updated when the following are true\n * 1. Journey marks are hit\n * 2. Page navigations occur\n * This function ensures the 2nd case is covered to help prevent \"stale\"\n * steps that don't hit their final mark because the users navigates\n * backwards in journey.\n */\nexport const trackUJNavigation = () => {\n  // navigationSteps are 0-index based, so size will give us the next key value\n  const navigationLength = Object.keys(steps.navigationSteps).length;\n  steps.navigationSteps[navigationLength] = {};\n\n  // when navigating, we should notify the user in case stale steps are\n  // removed from the state during navigations\n  const activeSteps = getActiveStepsFromNavigationSteps();\n  config.onMarkStep?.('', Object.keys(activeSteps));\n};\n","import { config } from '../config';\n\nimport { measureStep } from './measureStep';\nimport { steps, addActiveSteps, removeActiveStep } from './steps';\nimport {\n  getActiveStepsFromNavigationSteps,\n  recordEndMark,\n  recordStartMark,\n} from './navigationSteps';\n\nexport const measureSteps = (mark: string) => {\n  if (steps.finalMarkToStepsMap[mark]) {\n    recordEndMark(mark);\n    // this is an end mark so we delete the entry\n    const finalSteps = steps.finalMarkToStepsMap[mark];\n    Object.keys(finalSteps).forEach(startMark => {\n      const possibleSteps = finalSteps[startMark];\n      possibleSteps.forEach(removeActiveStep);\n      // Async processing all possible steps \n      // needs to be async due to clearing previously measured steps and marks.\n      // If we run all concurrently, there is a chance for a race condition \n      // where we are adding and deleteing the entries in WP.Performance which caused the measure to fail.\n      Promise.all(\n        possibleSteps.map(async step => {\n          // measure\n          await measureStep(step, startMark, mark);\n        }),\n      ).catch(() => {\n        // TODO @zizzamia log error\n      });\n    });\n  } else {\n    recordStartMark(mark);\n    addActiveSteps(mark);\n  }\n  const navigationBasedActiveSteps = getActiveStepsFromNavigationSteps();\n  config.onMarkStep?.(mark, Object.keys(navigationBasedActiveSteps));\n};\n","import { M, WP } from '../constants';\nimport { isPerformanceSupported } from '../isSupported';\nimport { logData } from '../log';\nimport { performanceMeasure } from '../measure';\nimport { metrics } from '../metrics';\nimport { roundByFour } from '../utils';\n\nimport { measureSteps } from './measureSteps';\n\n/**\n * Function which creates a step mark with a name generated\n * from the provided mark when called.\n *\n * The generated mark name has the following format:\n * `mark.${mark}`\n *\n */\nexport const markStep = (mark: string) => {\n  if (!isPerformanceSupported()) {\n    return;\n  }\n  WP.mark(M + mark);\n  measureSteps(mark);\n};\n\n// --------------------- TMP Location Before Deprecation -----------------\n// For start(), end(), clear()\n\n/**\n * Start performance measurement\n */\nexport const start = (markName: string): void => {\n  if (!isPerformanceSupported() || metrics[markName]) {\n    return;\n  }\n  metrics[markName] = true;\n  // Creates a timestamp in the browser's performance entry buffer\n  WP.mark(`mark_${markName}_start`);\n}\n\n/**\n * End performance measurement\n */\n export const end = (markName: string, customProperties = {}, doLogData = true): void => {\n  if (!isPerformanceSupported() || !metrics[markName]) {\n    return;\n  }\n  // End Performance Mark\n  WP.mark(`mark_${markName}_end`);\n  delete metrics[markName];\n  const measure = performanceMeasure(markName);\n  if (doLogData) {\n    logData(markName, roundByFour(measure), customProperties);\n  }\n}\n\n/**\n * Removes the named mark from the browser's performance entry buffer.\n */\n export const clear = (markName: string): void => {\n  delete metrics[markName];\n  // Mobile Safari v13 and UC Browser v11\n  // don't support clearMarks yet\n  if (!WP.clearMarks) {\n    return;\n  }\n  WP.clearMarks(`mark_${markName}_start`);\n  WP.clearMarks(`mark_${markName}_end`);\n}\n","import { WP } from './constants';\n\n/**\n * Get the duration of the timing metric or -1\n * if there a measurement has not been made by the User Timing API\n */\nexport const performanceMeasure = (measureName: string): number => {\n  WP.measure(\n    measureName,\n    `mark_${measureName}_start`,\n    `mark_${measureName}_end`,\n  );\n  const entry = WP.getEntriesByName(measureName).pop();\n  if (entry && entry.entryType === 'measure') {\n    return entry.duration;\n  }\n  return -1;\n};\n","import { ntbt } from './metrics';\nimport { logMetric } from './log';\nimport { getVitalsScore } from './vitalsScore';\n\nimport { end, start } from './steps/markStep';\n\nlet ntbtTimeoutID = 0;\n\n/**\n * NTBT = Navigation Total Blocking Time\n *\n * This metric measures the amount of time the application may be blocked\n * from processing code during the 2s window after a user navigates\n * from page A to page B.\n *\n * Because this library is navigation agnostic, we have this method\n * to mark when the navigation starts.\n *\n * The NTBT metric is the summation of the blocking time of all long tasks\n * in the 2s window after this method is invoked.\n *\n * If this method is called before the 2s window ends; it will trigger a new\n * NTBT measurement and interrupt the previous one.\n *\n * Credit: Thank you Steven Lam for helping with this!\n */\n export const markNTBT = (): void => {\n  start('ntbt');\n  // Reset NTBT value\n  ntbt.value = 0;\n  clearTimeout(ntbtTimeoutID);\n  // @ts-ignore\n  ntbtTimeoutID = setTimeout(() => {\n    end('ntbt', {}, false);\n    logMetric({\n      attribution: {},\n      name: `NTBT`,\n      rating: getVitalsScore('NTBT', ntbt.value),\n      value: ntbt.value,\n    });\n    ntbt.value = 0;\n  }, 2000);\n};\n","/**\n * Perfume.js v9.4.0 (http://zizzamia.github.io/perfume)\n * Copyright 2022 Leonardo Zizzamia (https://github.com/Zizzamia/perfume.js/graphs/contributors)\n * Licensed under MIT (https://github.com/Zizzamia/perfume.js/blob/master/LICENSE)\n *\n * @license\n */\nimport { config } from './config';\nimport { W, WN } from './constants';\nimport { getNavigationTiming } from './getNavigationTiming';\nimport { getNetworkInformation } from './getNetworkInformation';\nimport { isPerformanceSupported } from './isSupported';\nimport { logData, logMetric } from './log';\nimport { initPerformanceObserver } from './observe';\nimport { didVisibilityChange } from './onVisibilityChange';\nimport { reportStorageEstimate } from './storageEstimate';\nimport { IPerfumeOptions } from './types';\nimport { getVitalsScore } from './vitalsScore';\nimport { setStepsMap } from './steps/setStepsMap';\n\nexport const initPerfume = (options: IPerfumeOptions = {}) => {\n  // Extend default config with external options\n  config.analyticsTracker = options.analyticsTracker;\n  config.isResourceTiming = !!options.resourceTiming;\n  config.isElementTiming = !!options.elementTiming;\n  config.maxTime = options.maxMeasureTime || config.maxTime;\n  config.reportOptions = options.reportOptions || config.reportOptions;\n  config.steps = options.steps;\n  config.onMarkStep = options.onMarkStep;\n\n  // Exit from Perfume when basic Web Performance APIs aren't supported\n  if (!isPerformanceSupported()) {\n    return;\n  }\n  // Checks if use Performance or the EmulatedPerformance instance\n  if ('PerformanceObserver' in W) {\n    initPerformanceObserver();\n  }\n\n  // Init visibilitychange listener\n  if (typeof document.hidden !== 'undefined') {\n    // Opera 12.10 and Firefox 18 and later support\n    document.addEventListener('visibilitychange', didVisibilityChange);\n  }\n\n  const navigationTiming = getNavigationTiming();\n  // Log Navigation Timing\n  logData('navigationTiming', navigationTiming);\n  if (navigationTiming.redirectTime) {\n    logMetric({\n      attribution: {},\n      name: `RT`,\n      rating: getVitalsScore('RT', navigationTiming.redirectTime),\n      value: navigationTiming.redirectTime,\n    });\n  }\n  // Log Network Information\n  logData('networkInformation', getNetworkInformation());\n  // Let's estimate our storage capacity\n  if (WN && WN.storage && typeof WN.storage.estimate === 'function') {\n    WN.storage.estimate().then(reportStorageEstimate);\n  }\n  // initializing Steps if present\n  if (config.steps) {\n    setStepsMap();\n  }\n};\n","import { WP } from './constants';\nimport { isPerformanceSupported } from './isSupported';\nimport { IPerfumeNavigationTiming } from './types';\n\n/**\n * Navigation Timing API provides performance metrics for HTML documents.\n * w3c.github.io/navigation-timing/\n * developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\n */\nexport const getNavigationTiming = (): IPerfumeNavigationTiming => {\n  if (!isPerformanceSupported()) {\n    return {};\n  }\n  // There is an open issue to type correctly getEntriesByType\n  // github.com/microsoft/TypeScript/issues/33866\n  const n = WP.getEntriesByType('navigation')[0] as any;\n  // In Safari version 11.2 Navigation Timing isn't supported yet\n  if (!n) {\n    return {};\n  }\n  const responseStart = n.responseStart;\n  const responseEnd = n.responseEnd;\n  // We cache the navigation time for future times\n  return {\n    // fetchStart marks when the browser starts to fetch a resource\n    // responseEnd is when the last byte of the response arrives\n    fetchTime: responseEnd - n.fetchStart,\n    // Service worker time plus response time\n    workerTime: n.workerStart > 0 ? responseEnd - n.workerStart : 0,\n    // Request plus response time (network only)\n    totalTime: responseEnd - n.requestStart,\n    // Response time only (download)\n    downloadTime: responseEnd - responseStart,\n    // Time to First Byte (TTFB)\n    timeToFirstByte: responseStart - n.requestStart,\n    // HTTP header size\n    headerSize: n.transferSize - n.encodedBodySize || 0,\n    // Measuring DNS lookup time\n    dnsLookupTime: n.domainLookupEnd - n.domainLookupStart,\n    // redirects could add latency to requests\n    redirectTime: n.redirectEnd - n.redirectStart,\n  };\n};\n","import { config } from '../config';\nimport { IStepConfig } from '../types';\n\nimport { resetSteps, steps } from './steps';\n\nexport const setStepsMap = () => {\n  if (!config.steps) {\n    return;\n  }\n  resetSteps();\n\n  Object.entries<IStepConfig<string>>(config.steps).forEach(\n    ([step, { marks }]) => {\n      const startMark = marks[0];\n      const endMark = marks[1];\n      // getting the current steps associated with the current start mark\n      const currentStartMarks = steps.startMarkToStepsMap[startMark] ?? {};\n      currentStartMarks[step] = true;\n      steps.startMarkToStepsMap[startMark] = currentStartMarks;\n\n      if (!steps.finalMarkToStepsMap[endMark]) {\n        // insert when top level end mark is not present\n        steps.finalMarkToStepsMap[endMark] = { [startMark]: [step] };\n      } else {\n        // insert when end mark and start mark are both present\n        const currentSteps = steps.finalMarkToStepsMap[endMark][startMark] || [];\n        currentSteps.push(step);\n        steps.finalMarkToStepsMap[endMark][startMark] = currentSteps;\n      }\n    },\n  );\n};\n","import { M, WP } from '../constants';\n\nimport { measureSteps } from './measureSteps';\n\n/**\n * Function which creates a step mark with a name generated\n * from the provided mark if a mark with the same name does not\n * already exist when called.\n *\n * The generated mark name has the following format:\n * `mark.${mark}`\n *\n */\nexport const markStepOnce = (mark: string) => {\n  if (WP.getEntriesByName(M + mark).length === 0) {\n    WP.mark(M + mark);\n    measureSteps(mark);\n  }\n};\n"],"names":["IThresholdTier","config","isResourceTiming","isElementTiming","maxTime","reportOptions","W","globalThis","C","console","WN","navigator","WP","performance","getDM","deviceMemory","getHC","hardwareConcurrency","M","isPerformanceSupported","getEntriesByType","now","mark","et","sd","metrics","fcp","value","rt","beacon","css","fetch","img","other","script","total","xmlhttprequest","tbt","ntbt","perfObservers","visibility","isHidden","didChange","didVisibilityChange","document","hidden","po","eventType","cb","perfObserver","PerformanceObserver","entryList","getEntries","observe","type","buffered","e","warn","getIsLowEndDevice","getIsLowEndExperience","roundByFour","num","parseFloat","toFixed","convertToKB","bytes","Math","pow","reportPerf","measureName","data","rating","attribution","navigationType","reportTask","analyticsTracker","includes","metricName","navigatorInformation","serviceWorkerStatus","serviceWorker","controller","isLowEndDevice","isLowEndExperience","requestIdleCallback","timeout","initTotalBlockingTime","performanceEntries","forEach","entry","name","startTime","blockingTime","duration","t","n","r","i","STEP_THRESHOLDS","_a","instant","vitalsThresholds","maxOutlierThreshold","quick","moderate","slow","unavoidable","webVitalsScore","RT","TBT","NTBT","getVitalsScore","logData","metric","Object","keys","key","logMetric","setTimeout","duration2Decimal","a","window","o","readyState","domInteractive","domContentLoadedEventStart","domComplete","u","nodeName","nodeType","toLowerCase","toUpperCase","replace","c","id","classList","trim","length","parentNode","s","f","d","addEventListener","persisted","timeStamp","l","activationStart","m","prerendering","wasDiscarded","delta","entries","concat","Date","floor","random","v","supportedEntryTypes","Promise","resolve","then","assign","p","h","requestAnimationFrame","g","visibilityState","T","y","E","S","b","L","removeEventListener","firstHiddenTime","w","x","disconnect","max","push","reportAllChanges","A","P","passive","capture","B","D","q","k","entryType","target","cancelable","processingStart","R","H","N","takeRecords","j","U","V","_","interactionId","min","z","interactionCount","G","durationThreshold","J","K","Q","X","Y","latency","sort","splice","$","some","PerformanceEventTiming","prototype","Z","processingEnd","find","eventTarget","eventTime","eventEntry","loadState","ee","te","re","ie","ae","responseStart","initElementTiming","identifier","initResourceTiming","decodedBodySize","initiatorType","bodySize","initPerformanceObserver","domainLookupStart","connectStart","requestStart","waitingTime","dnsTime","connectionTime","requestTime","navigationEntry","onTTFB","report","ttfb","hadRecentInput","reduce","sources","node","largestShiftTarget","largestShiftTime","largestShiftValue","largestShiftSource","largestShiftEntry","onCLS","cls","timeToFirstByte","firstByteToFCP","fcpEntry","onFCP","onFID","fid","url","filter","responseEnd","element","resourceLoadDelay","resourceLoadTime","elementRenderDelay","lcpEntry","lcpResourceEntry","onLCP","lcp","onINP","inp","reportStorageEstimate","storageInfo","estimateUsageDetails","usageDetails","quota","usage","caches","indexedDB","serviceWorkerRegistrations","steps","finalMarkToStepsMap","startMarkToStepsMap","active","navigationSteps","removeActiveStep","step","resetSteps","getNavigationState","getStepsFromNavigation","navIndex","measureStep","startMark","endMark","stepMetricName","startMarkExists","getEntriesByName","threshold","stepMeasure","measure","score","getRating","stepName","undefined","start","end","detail","getActiveStepsFromNavigationSteps","numberOfSteps","activeSteps","currentNavIndex","currentNavStep","ongoingSteps","prevNavStep","prevNavSteps","measureSteps","lastNavIndex","newCurrentMark","navigationLength","ongoingNavStep","endMarkMap","lastNavStep","recordEndMark","finalSteps_1","possibleSteps","all","map","__awaiter","sent","catch","newSteps","addActiveSteps","navigationBasedActiveSteps","onMarkStep","call","markName","customProperties","doLogData","pop","performanceMeasure","ntbtTimeoutID","clearMarks","options","resourceTiming","elementTiming","maxMeasureTime","navigationTiming","fetchTime","fetchStart","workerTime","workerStart","totalTime","downloadTime","headerSize","transferSize","encodedBodySize","dnsLookupTime","domainLookupEnd","redirectTime","redirectEnd","redirectStart","getNavigationTiming","dataConnection","connection","effectiveType","saveData","downlink","rtt","getNetworkInformation","storage","estimate","marks","currentStartMarks","_c","currentSteps","_b","clearTimeout"],"mappings":"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"}