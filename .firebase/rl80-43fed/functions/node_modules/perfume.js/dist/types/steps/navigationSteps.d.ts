/**
 * We only report the active steps in the last 2 navigation step to prevent
 * Convert the steps.navigationSteps to an array of active steps.
 * "stale steps" from being reported.
 *
 * "stale steps" are defined as steps where the start mark was executed but the
 * corresponding end mark was never executed - thus leaving it as a "stale step"
 */
export declare const getActiveStepsFromNavigationSteps: () => Record<string, boolean>;
export declare const recordStartMark: (startMark: string) => void;
export declare const recordEndMark: (endMark: string) => void;
/**
 * An API consumers must use to update internal state based on page/screen navigations.
 * Internal state must be updated when the following are true
 * 1. Journey marks are hit
 * 2. Page navigations occur
 * This function ensures the 2nd case is covered to help prevent "stale"
 * steps that don't hit their final mark because the users navigates
 * backwards in journey.
 */
export declare const trackUJNavigation: () => void;
