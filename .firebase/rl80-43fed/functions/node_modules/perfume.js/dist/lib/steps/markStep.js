"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.clear = exports.end = exports.start = exports.markStep = void 0;
var constants_1 = require("../constants");
var isSupported_1 = require("../isSupported");
var log_1 = require("../log");
var measure_1 = require("../measure");
var metrics_1 = require("../metrics");
var utils_1 = require("../utils");
var measureSteps_1 = require("./measureSteps");
/**
 * Function which creates a step mark with a name generated
 * from the provided mark when called.
 *
 * The generated mark name has the following format:
 * `mark.${mark}`
 *
 */
var markStep = function (mark) {
    if (!(0, isSupported_1.isPerformanceSupported)()) {
        return;
    }
    constants_1.WP.mark(constants_1.M + mark);
    (0, measureSteps_1.measureSteps)(mark);
};
exports.markStep = markStep;
// --------------------- TMP Location Before Deprecation -----------------
// For start(), end(), clear()
/**
 * Start performance measurement
 */
var start = function (markName) {
    if (!(0, isSupported_1.isPerformanceSupported)() || metrics_1.metrics[markName]) {
        return;
    }
    metrics_1.metrics[markName] = true;
    // Creates a timestamp in the browser's performance entry buffer
    constants_1.WP.mark("mark_".concat(markName, "_start"));
};
exports.start = start;
/**
 * End performance measurement
 */
var end = function (markName, customProperties, doLogData) {
    if (customProperties === void 0) { customProperties = {}; }
    if (doLogData === void 0) { doLogData = true; }
    if (!(0, isSupported_1.isPerformanceSupported)() || !metrics_1.metrics[markName]) {
        return;
    }
    // End Performance Mark
    constants_1.WP.mark("mark_".concat(markName, "_end"));
    delete metrics_1.metrics[markName];
    var measure = (0, measure_1.performanceMeasure)(markName);
    if (doLogData) {
        (0, log_1.logData)(markName, (0, utils_1.roundByFour)(measure), customProperties);
    }
};
exports.end = end;
/**
 * Removes the named mark from the browser's performance entry buffer.
 */
var clear = function (markName) {
    delete metrics_1.metrics[markName];
    // Mobile Safari v13 and UC Browser v11
    // don't support clearMarks yet
    if (!constants_1.WP.clearMarks) {
        return;
    }
    constants_1.WP.clearMarks("mark_".concat(markName, "_start"));
    constants_1.WP.clearMarks("mark_".concat(markName, "_end"));
};
exports.clear = clear;
//# sourceMappingURL=markStep.js.map