"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.initPerfume = void 0;
/**
 * Perfume.js v9.4.0 (http://zizzamia.github.io/perfume)
 * Copyright 2022 Leonardo Zizzamia (https://github.com/Zizzamia/perfume.js/graphs/contributors)
 * Licensed under MIT (https://github.com/Zizzamia/perfume.js/blob/master/LICENSE)
 *
 * @license
 */
var config_1 = require("./config");
var constants_1 = require("./constants");
var getNavigationTiming_1 = require("./getNavigationTiming");
var getNetworkInformation_1 = require("./getNetworkInformation");
var isSupported_1 = require("./isSupported");
var log_1 = require("./log");
var observe_1 = require("./observe");
var onVisibilityChange_1 = require("./onVisibilityChange");
var storageEstimate_1 = require("./storageEstimate");
var vitalsScore_1 = require("./vitalsScore");
var setStepsMap_1 = require("./steps/setStepsMap");
var initPerfume = function (options) {
    if (options === void 0) { options = {}; }
    // Extend default config with external options
    config_1.config.analyticsTracker = options.analyticsTracker;
    config_1.config.isResourceTiming = !!options.resourceTiming;
    config_1.config.isElementTiming = !!options.elementTiming;
    config_1.config.maxTime = options.maxMeasureTime || config_1.config.maxTime;
    config_1.config.reportOptions = options.reportOptions || config_1.config.reportOptions;
    config_1.config.steps = options.steps;
    config_1.config.onMarkStep = options.onMarkStep;
    // Exit from Perfume when basic Web Performance APIs aren't supported
    if (!(0, isSupported_1.isPerformanceSupported)()) {
        return;
    }
    // Checks if use Performance or the EmulatedPerformance instance
    if ('PerformanceObserver' in constants_1.W) {
        (0, observe_1.initPerformanceObserver)();
    }
    // Init visibilitychange listener
    if (typeof document.hidden !== 'undefined') {
        // Opera 12.10 and Firefox 18 and later support
        document.addEventListener('visibilitychange', onVisibilityChange_1.didVisibilityChange);
    }
    var navigationTiming = (0, getNavigationTiming_1.getNavigationTiming)();
    // Log Navigation Timing
    (0, log_1.logData)('navigationTiming', navigationTiming);
    if (navigationTiming.redirectTime) {
        (0, log_1.logMetric)({
            attribution: {},
            name: "RT",
            rating: (0, vitalsScore_1.getVitalsScore)('RT', navigationTiming.redirectTime),
            value: navigationTiming.redirectTime,
        });
    }
    // Log Network Information
    (0, log_1.logData)('networkInformation', (0, getNetworkInformation_1.getNetworkInformation)());
    // Let's estimate our storage capacity
    if (constants_1.WN && constants_1.WN.storage && typeof constants_1.WN.storage.estimate === 'function') {
        constants_1.WN.storage.estimate().then(storageEstimate_1.reportStorageEstimate);
    }
    // initializing Steps if present
    if (config_1.config.steps) {
        (0, setStepsMap_1.setStepsMap)();
    }
};
exports.initPerfume = initPerfume;
//# sourceMappingURL=initPerfume.js.map